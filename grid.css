.grid {
    background: white;
    display: grid;
    gap: 10px;
    grid-template-columns: repeat(4, minmax(100px, 1fr));
    grid-template-rows: repeat(4, 100px);
    grid-auto-flow: column;
    grid-auto-columns: 100px;

    /* 
    ● align-self
● justify-self
● place-self: (수직) (수평);
▷ child에만 적용돠는 property이다.

● grid-auto-rows: (크기);
▷ 만들어놓은 row보다 더 많은 content가 있으면, 자동으로 row를 만들어라.

● grid-auto-flow: (방향); [기본값: row]
▷ flex-direction과 비슷하다.
▷ row가 끝날 때 새로운 row를 만들지, 새로운 column을 만들지 결정한다.

● grid-auto-columns: (크기);
▷ grid-auto-flow: column;일때 작동한다. */
}
.items:nth-child(odd) {
    background-color: black;
}
.items:nth-child(even) {
    background-color: brown;
}
/* 
grid 도 부모에서 일어남(flex와 규칙 비슷함)
항상 block은 width와 height 주어져 있지 않은 경우에는 
width는 가능한 한 최댓값, height은 0이다.
=> fr을 쓰려면 grid container에 height만 써도 동작하지만, 
width만 쓰면 동작하지 않는 이유가 이것이다.


● justify-items
● align-items
● place-items: (수직) (수평);

▷ stretch : grid를 늘려서 grid를 채우게 한다.
▷ start : item을 cell 시작에 배치한다.
▷ center : item을 cell 중앙에 배치한다.
▷ end : item을 cell 끝에 배치한다.
 */

/* 
## Grid:

- [0 ] grid-template-columns
- [0 ] grid-template-rows
- [0 ] grid-column-gap>
- [0 ] grid-row-gap
- [0 ] grid-gap
- [0 ] grid-template-areas
- [0 ] grid-template
- [0 ] grid-auto-columns
- [0 ] grid-auto-rows
- [0 ] grid-auto-flow
- [0 ] grid-column-start
- [0 ] grid-column-end
- [0 ] grid-row-start
- [0 ] grid-row-end
- [0 ] grid-column
- [0 ] grid-row
- [ ] justify-items
- [ ] align-items
- [ ] justify-content
- [ ] align-content
- [ ] justify-self
- [ ] align-self */
