.grid {
    display: grid;
    height: 50vh;
    gap: 10px;
    grid-template:
        "header header header header" 1fr
        "content content content nav" 2fr
        "footer footer footer footer" 1fr / 1fr 1fr 1fr 3fr;
    /* 각 row 지정 row크기 지정 / 각 column 크기 지정 (repeat사용 못함)
        fr은 fraction의 약자로 구역을 뜻함
        전체 구역을 분할해서 크기 맞춰줌
     */
}
.header {
    background-color: antiquewhite;
    grid-area: header;
}
.content {
    background-color: aqua;
    grid-area: content;
}
.nav {
    background-color: black;
    grid-area: nav;
}
.footer {
    background-color: blue;
    grid-area: footer;
}

/* 
grid 도 부모에서 일어남(flex와 규칙 비슷함)
항상 block은 width와 height 주어져 있지 않은 경우에는 
width는 가능한 한 최댓값, height은 0이다.
=> fr을 쓰려면 grid container에 height만 써도 동작하지만, 
width만 쓰면 동작하지 않는 이유가 이것이다.

 */

/* 
## Grid:

- [0 ] grid-template-columns
- [0 ] grid-template-rows
- [0 ] grid-column-gap>
- [0 ] grid-row-gap
- [0 ] grid-gap
- [0 ] grid-template-areas
- [0 ] grid-template
- [0 ] grid-auto-columns
- [0 ] grid-auto-rows
- [0 ] grid-auto-flow
- [0 ] grid-column-start
- [0 ] grid-column-end
- [0 ] grid-row-start
- [0 ] grid-row-end
- [0 ] grid-column
- [0 ] grid-row
- [ ] justify-items
- [ ] align-items
- [ ] justify-content
- [ ] align-content
- [ ] justify-self
- [ ] align-self */
