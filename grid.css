.grid {
    display: grid;
    height: 50vh;
    gap: 10px;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
    place-items: stretch center;
    /* align-items: stretch;
    justify-items: center; */
    /* 
    ● align-items 수직
    ● justify-items 수평
● place-items: (수직) (수평);

▷ stretch : grid를 늘려서 grid를 채우게 한다.
▷ start : item을 cell 시작에 배치한다.
▷ center : item을 cell 중앙에 배치한다.
▷ end : item을 cell 끝에 배치한다. */
}
.header {
    background-color: antiquewhite;
}
.content {
    background-color: aqua;
}
.nav {
    background-color: black;
}
.footer {
    background-color: blue;
}

/* 
grid 도 부모에서 일어남(flex와 규칙 비슷함)
항상 block은 width와 height 주어져 있지 않은 경우에는 
width는 가능한 한 최댓값, height은 0이다.
=> fr을 쓰려면 grid container에 height만 써도 동작하지만, 
width만 쓰면 동작하지 않는 이유가 이것이다.


● justify-items
● align-items
● place-items: (수직) (수평);

▷ stretch : grid를 늘려서 grid를 채우게 한다.
▷ start : item을 cell 시작에 배치한다.
▷ center : item을 cell 중앙에 배치한다.
▷ end : item을 cell 끝에 배치한다.
 */

/* 
## Grid:

- [0 ] grid-template-columns
- [0 ] grid-template-rows
- [0 ] grid-column-gap>
- [0 ] grid-row-gap
- [0 ] grid-gap
- [0 ] grid-template-areas
- [0 ] grid-template
- [0 ] grid-auto-columns
- [0 ] grid-auto-rows
- [0 ] grid-auto-flow
- [0 ] grid-column-start
- [0 ] grid-column-end
- [0 ] grid-row-start
- [0 ] grid-row-end
- [0 ] grid-column
- [0 ] grid-row
- [ ] justify-items
- [ ] align-items
- [ ] justify-content
- [ ] align-content
- [ ] justify-self
- [ ] align-self */
